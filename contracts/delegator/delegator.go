package delegator

import (
	"bytes"

	"github.com/gochain-io/gochain/common"
	"github.com/gochain-io/gochain/core/vm"
)

// Hex-encoded compiled solidity contracts (delegator.sol).
const (
	DelegatorBin = `0x608060405273eeffeeffeeffeeffeeffeeffeeffeeffeeffeeff6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073aabbaabbaabbaabbaabbaabbaabbaabbaabbaabb600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503480156100b957600080fd5b5061021b806100c96000396000f300608060405260043610610041576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063776d1a0114610169575b34801561004d57600080fd5b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639bb66b286000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000366040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018060200182810382528484828181526020019250808284378201915050945050505050600060405180830381600087803b15801561014f57600080fd5b505af1158015610163573d6000803e3d6000fd5b50505050005b34801561017557600080fd5b506101aa600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506101ac565b005b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505600a165627a7a7230582007e3c1780cc3c2d74d0227835aecc91fc769bc0305b998040b7fa9f80053fbf60029`
	StorageBin   = `0x608060405234801561001057600080fd5b50610185806100206000396000f300608060405260043610610041576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680639bb66b2814610046575b600080fd5b34801561005257600080fd5b506100cd600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506100cf565b005b8173ffffffffffffffffffffffffffffffffffffffff168160405180828051906020019080838360005b838110156101145780820151818401526020810190506100f9565b50505050905090810190601f1680156101415780820380516001836020036101000a031916815260200191505b50915050600060405180830381855af49150505050505600a165627a7a72305820a990dab9a15d5367b396900f415e310d55e26fd233893c46bd12f6f260280dbe0029`
)

// DelegatorCode returns delegation code with a given storage address and target contract.
func DelegatorCode(storage, target common.Address) []byte {
	code := common.FromHex(DelegatorBin)

	// Replace placeholder addresses for storage & target contract.
	code = bytes.Replace(code, common.FromHex(`0xaabbaabbaabbaabbaabbaabbaabbaabbaabbaabb`), storage[:], -1)
	code = bytes.Replace(code, common.FromHex(`0xeeffeeffeeffeeffeeffeeffeeffeeffeeffeeff`), target[:], -1)

	// Strip auxdata and replace with system contract suffix.
	code = vm.TrimContractCodeAuxdata(code)
	code = append(code, vm.SystemContractSuffix...)
	return code
}

// StorageCode returns a storage contract used for delegation.
func StorageCode() []byte {
	code := common.FromHex(StorageBin)
	code = vm.TrimContractCodeAuxdata(code)
	code = append(code, vm.SystemContractSuffix...)
	return code
}
